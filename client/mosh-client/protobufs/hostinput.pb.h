// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hostinput.proto

#ifndef PROTOBUF_hostinput_2eproto__INCLUDED
#define PROTOBUF_hostinput_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace HostBuffers {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_hostinput_2eproto();
void protobuf_AssignDesc_hostinput_2eproto();
void protobuf_ShutdownFile_hostinput_2eproto();

class HostMessage;
class Instruction;
class HostBytes;
class ResizeMessage;
class EchoAck;

// ===================================================================

class HostMessage : public ::google::protobuf::MessageLite {
 public:
  HostMessage();
  virtual ~HostMessage();

  HostMessage(const HostMessage& from);

  inline HostMessage& operator=(const HostMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const HostMessage& default_instance();

  void Swap(HostMessage* other);

  // implements Message ----------------------------------------------

  HostMessage* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const HostMessage& from);
  void MergeFrom(const HostMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .HostBuffers.Instruction instruction = 1;
  inline int instruction_size() const;
  inline void clear_instruction();
  static const int kInstructionFieldNumber = 1;
  inline const ::HostBuffers::Instruction& instruction(int index) const;
  inline ::HostBuffers::Instruction* mutable_instruction(int index);
  inline ::HostBuffers::Instruction* add_instruction();
  inline const ::google::protobuf::RepeatedPtrField< ::HostBuffers::Instruction >&
      instruction() const;
  inline ::google::protobuf::RepeatedPtrField< ::HostBuffers::Instruction >*
      mutable_instruction();

  // @@protoc_insertion_point(class_scope:HostBuffers.HostMessage)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::HostBuffers::Instruction > instruction_;
  friend void  protobuf_AddDesc_hostinput_2eproto();
  friend void protobuf_AssignDesc_hostinput_2eproto();
  friend void protobuf_ShutdownFile_hostinput_2eproto();

  void InitAsDefaultInstance();
  static HostMessage* default_instance_;
};
// -------------------------------------------------------------------

class Instruction : public ::google::protobuf::MessageLite {
 public:
  Instruction();
  virtual ~Instruction();

  Instruction(const Instruction& from);

  inline Instruction& operator=(const Instruction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const Instruction& default_instance();

  void Swap(Instruction* other);

  // implements Message ----------------------------------------------

  Instruction* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Instruction& from);
  void MergeFrom(const Instruction& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  GOOGLE_PROTOBUF_EXTENSION_ACCESSORS(Instruction)
  // @@protoc_insertion_point(class_scope:HostBuffers.Instruction)
 private:

  ::google::protobuf::internal::ExtensionSet _extensions_;

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_hostinput_2eproto();
  friend void protobuf_AssignDesc_hostinput_2eproto();
  friend void protobuf_ShutdownFile_hostinput_2eproto();

  void InitAsDefaultInstance();
  static Instruction* default_instance_;
};
// -------------------------------------------------------------------

class HostBytes : public ::google::protobuf::MessageLite {
 public:
  HostBytes();
  virtual ~HostBytes();

  HostBytes(const HostBytes& from);

  inline HostBytes& operator=(const HostBytes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const HostBytes& default_instance();

  void Swap(HostBytes* other);

  // implements Message ----------------------------------------------

  HostBytes* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const HostBytes& from);
  void MergeFrom(const HostBytes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes hoststring = 4;
  inline bool has_hoststring() const;
  inline void clear_hoststring();
  static const int kHoststringFieldNumber = 4;
  inline const ::std::string& hoststring() const;
  inline void set_hoststring(const ::std::string& value);
  inline void set_hoststring(const char* value);
  inline void set_hoststring(const void* value, size_t size);
  inline ::std::string* mutable_hoststring();
  inline ::std::string* release_hoststring();
  inline void set_allocated_hoststring(::std::string* hoststring);

  // @@protoc_insertion_point(class_scope:HostBuffers.HostBytes)
 private:
  inline void set_has_hoststring();
  inline void clear_has_hoststring();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* hoststring_;
  friend void  protobuf_AddDesc_hostinput_2eproto();
  friend void protobuf_AssignDesc_hostinput_2eproto();
  friend void protobuf_ShutdownFile_hostinput_2eproto();

  void InitAsDefaultInstance();
  static HostBytes* default_instance_;
};
// -------------------------------------------------------------------

class ResizeMessage : public ::google::protobuf::MessageLite {
 public:
  ResizeMessage();
  virtual ~ResizeMessage();

  ResizeMessage(const ResizeMessage& from);

  inline ResizeMessage& operator=(const ResizeMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ResizeMessage& default_instance();

  void Swap(ResizeMessage* other);

  // implements Message ----------------------------------------------

  ResizeMessage* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ResizeMessage& from);
  void MergeFrom(const ResizeMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 width = 5;
  inline bool has_width() const;
  inline void clear_width();
  static const int kWidthFieldNumber = 5;
  inline ::google::protobuf::int32 width() const;
  inline void set_width(::google::protobuf::int32 value);

  // optional int32 height = 6;
  inline bool has_height() const;
  inline void clear_height();
  static const int kHeightFieldNumber = 6;
  inline ::google::protobuf::int32 height() const;
  inline void set_height(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HostBuffers.ResizeMessage)
 private:
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  friend void  protobuf_AddDesc_hostinput_2eproto();
  friend void protobuf_AssignDesc_hostinput_2eproto();
  friend void protobuf_ShutdownFile_hostinput_2eproto();

  void InitAsDefaultInstance();
  static ResizeMessage* default_instance_;
};
// -------------------------------------------------------------------

class EchoAck : public ::google::protobuf::MessageLite {
 public:
  EchoAck();
  virtual ~EchoAck();

  EchoAck(const EchoAck& from);

  inline EchoAck& operator=(const EchoAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const EchoAck& default_instance();

  void Swap(EchoAck* other);

  // implements Message ----------------------------------------------

  EchoAck* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const EchoAck& from);
  void MergeFrom(const EchoAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 echo_ack_num = 8;
  inline bool has_echo_ack_num() const;
  inline void clear_echo_ack_num();
  static const int kEchoAckNumFieldNumber = 8;
  inline ::google::protobuf::uint64 echo_ack_num() const;
  inline void set_echo_ack_num(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:HostBuffers.EchoAck)
 private:
  inline void set_has_echo_ack_num();
  inline void clear_has_echo_ack_num();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 echo_ack_num_;
  friend void  protobuf_AddDesc_hostinput_2eproto();
  friend void protobuf_AssignDesc_hostinput_2eproto();
  friend void protobuf_ShutdownFile_hostinput_2eproto();

  void InitAsDefaultInstance();
  static EchoAck* default_instance_;
};
// ===================================================================

static const int kHostbytesFieldNumber = 2;
extern ::google::protobuf::internal::ExtensionIdentifier< ::HostBuffers::Instruction,
    ::google::protobuf::internal::MessageTypeTraits< ::HostBuffers::HostBytes >, 11, false >
  hostbytes;
static const int kResizeFieldNumber = 3;
extern ::google::protobuf::internal::ExtensionIdentifier< ::HostBuffers::Instruction,
    ::google::protobuf::internal::MessageTypeTraits< ::HostBuffers::ResizeMessage >, 11, false >
  resize;
static const int kEchoackFieldNumber = 7;
extern ::google::protobuf::internal::ExtensionIdentifier< ::HostBuffers::Instruction,
    ::google::protobuf::internal::MessageTypeTraits< ::HostBuffers::EchoAck >, 11, false >
  echoack;

// ===================================================================

// HostMessage

// repeated .HostBuffers.Instruction instruction = 1;
inline int HostMessage::instruction_size() const {
  return instruction_.size();
}
inline void HostMessage::clear_instruction() {
  instruction_.Clear();
}
inline const ::HostBuffers::Instruction& HostMessage::instruction(int index) const {
  // @@protoc_insertion_point(field_get:HostBuffers.HostMessage.instruction)
  return instruction_.Get(index);
}
inline ::HostBuffers::Instruction* HostMessage::mutable_instruction(int index) {
  // @@protoc_insertion_point(field_mutable:HostBuffers.HostMessage.instruction)
  return instruction_.Mutable(index);
}
inline ::HostBuffers::Instruction* HostMessage::add_instruction() {
  // @@protoc_insertion_point(field_add:HostBuffers.HostMessage.instruction)
  return instruction_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HostBuffers::Instruction >&
HostMessage::instruction() const {
  // @@protoc_insertion_point(field_list:HostBuffers.HostMessage.instruction)
  return instruction_;
}
inline ::google::protobuf::RepeatedPtrField< ::HostBuffers::Instruction >*
HostMessage::mutable_instruction() {
  // @@protoc_insertion_point(field_mutable_list:HostBuffers.HostMessage.instruction)
  return &instruction_;
}

// -------------------------------------------------------------------

// Instruction

// -------------------------------------------------------------------

// HostBytes

// optional bytes hoststring = 4;
inline bool HostBytes::has_hoststring() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HostBytes::set_has_hoststring() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HostBytes::clear_has_hoststring() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HostBytes::clear_hoststring() {
  if (hoststring_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    hoststring_->clear();
  }
  clear_has_hoststring();
}
inline const ::std::string& HostBytes::hoststring() const {
  // @@protoc_insertion_point(field_get:HostBuffers.HostBytes.hoststring)
  return *hoststring_;
}
inline void HostBytes::set_hoststring(const ::std::string& value) {
  set_has_hoststring();
  if (hoststring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    hoststring_ = new ::std::string;
  }
  hoststring_->assign(value);
  // @@protoc_insertion_point(field_set:HostBuffers.HostBytes.hoststring)
}
inline void HostBytes::set_hoststring(const char* value) {
  set_has_hoststring();
  if (hoststring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    hoststring_ = new ::std::string;
  }
  hoststring_->assign(value);
  // @@protoc_insertion_point(field_set_char:HostBuffers.HostBytes.hoststring)
}
inline void HostBytes::set_hoststring(const void* value, size_t size) {
  set_has_hoststring();
  if (hoststring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    hoststring_ = new ::std::string;
  }
  hoststring_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HostBuffers.HostBytes.hoststring)
}
inline ::std::string* HostBytes::mutable_hoststring() {
  set_has_hoststring();
  if (hoststring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    hoststring_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:HostBuffers.HostBytes.hoststring)
  return hoststring_;
}
inline ::std::string* HostBytes::release_hoststring() {
  clear_has_hoststring();
  if (hoststring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = hoststring_;
    hoststring_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HostBytes::set_allocated_hoststring(::std::string* hoststring) {
  if (hoststring_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete hoststring_;
  }
  if (hoststring) {
    set_has_hoststring();
    hoststring_ = hoststring;
  } else {
    clear_has_hoststring();
    hoststring_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:HostBuffers.HostBytes.hoststring)
}

// -------------------------------------------------------------------

// ResizeMessage

// optional int32 width = 5;
inline bool ResizeMessage::has_width() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResizeMessage::set_has_width() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResizeMessage::clear_has_width() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResizeMessage::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 ResizeMessage::width() const {
  // @@protoc_insertion_point(field_get:HostBuffers.ResizeMessage.width)
  return width_;
}
inline void ResizeMessage::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:HostBuffers.ResizeMessage.width)
}

// optional int32 height = 6;
inline bool ResizeMessage::has_height() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResizeMessage::set_has_height() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResizeMessage::clear_has_height() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResizeMessage::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 ResizeMessage::height() const {
  // @@protoc_insertion_point(field_get:HostBuffers.ResizeMessage.height)
  return height_;
}
inline void ResizeMessage::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:HostBuffers.ResizeMessage.height)
}

// -------------------------------------------------------------------

// EchoAck

// optional uint64 echo_ack_num = 8;
inline bool EchoAck::has_echo_ack_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EchoAck::set_has_echo_ack_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EchoAck::clear_has_echo_ack_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EchoAck::clear_echo_ack_num() {
  echo_ack_num_ = GOOGLE_ULONGLONG(0);
  clear_has_echo_ack_num();
}
inline ::google::protobuf::uint64 EchoAck::echo_ack_num() const {
  // @@protoc_insertion_point(field_get:HostBuffers.EchoAck.echo_ack_num)
  return echo_ack_num_;
}
inline void EchoAck::set_echo_ack_num(::google::protobuf::uint64 value) {
  set_has_echo_ack_num();
  echo_ack_num_ = value;
  // @@protoc_insertion_point(field_set:HostBuffers.EchoAck.echo_ack_num)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace HostBuffers

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_hostinput_2eproto__INCLUDED
